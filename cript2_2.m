clc; close; clear;

f = imread("test2c2m.bmp","bmp");
n=size(f);
f2=f;
figure(1)
image(f)
if mod(n(1,1),2) ~= 0
    n(1,1) = n(1,1) + 1;
    f2(n(1,1),:,:) = 0;
end
if mod(n(1,2),2) ~= 0
    n(1,2) = n(1,2) + 1;
    f2(:,n(1,2),:) = 0;
end
if mod(n(1,2),4) ~= 0
    n(1,2) = n(1,2) + 2;
    f2(:,n(1,2),:) = 0;
    f2(:,n(1,2)-1,:) = 0;
end

key=[0,0,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,1,0,1,0,0,1,1,0,1,1,1,0,1,0,0,1,0,1,0,0,0,1,1,0,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0];
keys=zeros(16,48);
kl1 = [key(57),key(49),key(41),key(33),key(25),key(17),key(9),key(1),key(58),key(50),key(40),key(34),key(26),key(18),key(10),key(2),key(59),key(51),key(43),key(35),key(27),key(19),key(11),key(3),key(60),key(52),key(44),key(36);...
    key(63),key(55),key(47),key(39),key(31),key(23),key(15),key(7),key(62),key(54),key(46),key(38),key(30),key(22),key(14),key(6),key(61),key(53),key(45),key(37),key(29),key(21),key(13),key(5),key(28),key(20),key(12),key(4)];
mv = [1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1];
PC2 = [14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,13,24,3,9,19,27,2,12,23,17,5,20,16,21,11,28,6,25,18,14,22,8,1,4];
IP = [2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7;...
    8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1,8,7,6,5,4,3,2,1];
IPN = [8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1;...
    5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4,5,1,6,2,7,3,8,4];
for w = 1:16
    k1 = kl1(1,:);
    k2 = kl1(2,:);
    for u = 1:28
        kl1(1,u) = k1(1,mod(u-1-mv(1,w),28)+1);
        kl1(2,u) = k2(1,mod(u-1-mv(1,w),28)+1);
    end
    for u = 1:24
        keys(w,u) = k1(1,PC2(1,u));
        keys(w,24+u) = k2(1,PC2(1,24+u));
    end
end

invec = round(rand(8,8));
m = zeros(1,8);
CvC = zeros(8,8);
m1 = zeros(4,8);
m2 = zeros(4,8);
IV = invec;
for y = 0:2:n(1,1)-2
    for x = 0:4:n(1,2)-4
        for col = 1:3
           for i = 1:4
               m(1,i)=f2(y+ceil(i/2),x+mod(i-1,2)+1,col);
               m(1,i+4)=f2(y+ceil(i/2),x+mod(i-1,2)+3,col);
           end
           MvM = itobit(m);
           for i = 1:64
               CvC(mod(i-1,8)+1,ceil(i/8)) = IV(IP(1,i),IP(2,i));
           end
           for i = 1:4
               m1(i,:) = CvC(i,:);
               m2(i,:) = CvC(i+4,:);
           end
           CvC = encript(m1,m2,keys);
           for i = 1:64
               IV(mod(i-1,8)+1,ceil(i/8)) = CvC(IPN(1,i),IPN(2,i));
           end
           m = bittoi(xor(MvM,IV));
           for i = 1:4
               f2(y+ceil(i/2),x+mod(i-1,2)+1,col)=m(1,i);
               f2(y+ceil(i/2),x+mod(i-1,2)+3,col)=m(1,4+i);
           end
        end
    end
end
figure(2)
image(f2)

IV = invec;
for y = 0:2:n(1,1)-2
    for x = 0:4:n(1,2)-4
        for col = 1:3
           for i = 1:4
               m(1,i)=f2(y+ceil(i/2),x+mod(i-1,2)+1,col);
               m(1,i+4)=f2(y+ceil(i/2),x+mod(i-1,2)+3,col);
           end
           MvM = itobit(m);
           for i = 1:64
               CvC(mod(i-1,8)+1,ceil(i/8)) = IV(IP(1,i),IP(2,i));
           end
           for i = 1:4
               m1(i,:) = CvC(i,:);
               m2(i,:) = CvC(i+4,:);
           end
           CvC = encript(m1,m2,keys);
           for i = 1:64
               IV(mod(i-1,8)+1,ceil(i/8)) = CvC(IPN(1,i),IPN(2,i));
           end
           m = bittoi(xor(MvM,IV));
           for i = 1:4
               f2(y+ceil(i/2),x+mod(i-1,2)+1,col)=m(1,i);
               f2(y+ceil(i/2),x+mod(i-1,2)+3,col)=m(1,4+i);
           end
        end
    end
end
figure(3)
image(f2)


function chif = encript(M1,M2,keyt)
    for i = 1:8
        C = feistel(M2, keyt(mod((i-1)*2,16)+1,:));
        M1 = xor(M1,C);
        C = feistel(M1, keyt(mod((i-1)*2,16)+2,:));
        M2 = xor(M2,C);
    end
    chif = zeros(8,8);
    for i = 1:4
        chif(i,:) = M1(i,:);
        chif(i+4,:) = M2(i,:);
    end
end

function f = feistel(m,key) 
    SUB = [14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13;...
           15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9;...
           10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12;...
           7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14;...
           2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,0,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3;...
           12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13;...
           4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12;...
           13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];
    perm = [4,1,1,1,2,4,3,2,3,4,3,2,4,3,1,3,4,4,3,3,4,3,2,4,1,1,2,2,2,1,2,1;...
            4,8,1,2,1,8,5,6,2,3,4,5,2,7,4,3,5,7,6,8,6,1,8,1,6,5,7,3,4,3,2,7];
    M6 = zeros(6,8);
    for l=1:8
        M6(1,l) = m(4,mod(l-2,8)+1);
        for u = 1:4
            M6(u+1,l) = m(u,l);
        end
        M6(6,l) = m(1,mod(l,8)+1);
    end
    
    K6 = zeros(6,8);
    for l=1:8
        for u = 1:6
            K6(u,l) = key(6*(l-1)+u);
        end
    end
    M6 = xor(K6,M6);
    M1I = bittoicol(M6);
    for l = 1:8 
        M1I(1,l) = SUB(l,M1I(1,l)+1);
    end
    M4 = itobitcol(M1I);
    f = zeros(4,8);
    for i = 1:4
        for j = 1:8
            f(i,j)=M4(perm(1,8*(i-1)+j),perm(1,8*(i-1)+j));
        end
    end
end

function g = itobit(I)
    g = zeros(8,8);
    for l=1:8
        for u = 1:8
            g(l,9-u) = mod(floor(I(1,l)/(2^(u-1))),2);
        end
    end
end

function B = bittoi(g)
    B = zeros(1,8);
    for y=1:8
        for x = 1:8
            B(1,y) =B(1,y) + g(y,x)*(2^(8-x));
        end
    end
end

function g = itobitcol(I)
    g = zeros(4,8);
    for l=1:8
        for u = 1:4
            g(5-u,l) = mod(floor(I(1,l)/(2^(u-1))),2);
        end
    end
end

function B = bittoicol(g)
    B = zeros(1,8);
    for x=1:8
        for y = 1:6
            B(1,x) =B(1,x) + g(y,x)*(2^(6-y));
        end
    end
end